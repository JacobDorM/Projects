{"ast":null,"code":"import _ from 'lodash';\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n  console.log(getState().posts);\n};\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get('/posts');\n  dispatch({\n    type: 'FETCH_POSTS',\n    payload: response.data\n  });\n}; // export const fetchUser = id =>  dispatch => _fetchUser(id, dispatch);\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n// \tconst response = await jsonPlaceholder.get(`/users/${id}`);\n// \tdispatch({ type: 'FETCH_USER', payload: response.data});\n// });\n\nexport const fetchUser = id => async dispatch => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n  dispatch({\n    type: 'FETCH_USER',\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/workspace/ModernReactWithRedux/Section14/blog/src/actions/index.js"],"names":["_","jsonPlaceholder","fetchPostsAndUsers","dispatch","getState","fetchPosts","console","log","posts","response","get","type","payload","data","fetchUser","id"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAErE,QAAMD,QAAQ,CAACE,UAAU,EAAX,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,GAAGI,KAAvB;AACA,CAJM;AAMN,OAAO,MAAMH,UAAU,GAAG,MAAM,MAAMF,QAAN,IAAkB;AACjD,QAAMM,QAAQ,GAAG,MAAMR,eAAe,CAACS,GAAhB,CAAoB,QAApB,CAAvB;AAEAP,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACA,CAJM,C,CAMR;AACA;AACA;AAEA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAGC,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AAChD,QAAMM,QAAQ,GAAG,MAAMR,eAAe,CAACS,GAAhB,CAAqB,UAASK,EAAG,EAAjC,CAAvB;AAEAZ,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACA,CAJM","sourcesContent":["import _ from 'lodash';\nimport jsonPlaceholder from '../apis/jsonPlaceholder'\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n\t\n\tawait dispatch(fetchPosts());\n\tconsole.log(getState().posts);\n};\n\n\texport const fetchPosts = () => async dispatch => {\n\t\tconst response = await jsonPlaceholder.get('/posts');\n\t\n\t\tdispatch({ type: 'FETCH_POSTS', payload: response.data });\n\t};\n\n// export const fetchUser = id =>  dispatch => _fetchUser(id, dispatch);\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n// \tconst response = await jsonPlaceholder.get(`/users/${id}`);\n\t\n// \tdispatch({ type: 'FETCH_USER', payload: response.data});\n// });\n\nexport const fetchUser = id => async dispatch => {\n\tconst response = await jsonPlaceholder.get(`/users/${id}`);\n\t\n\tdispatch({ type: 'FETCH_USER', payload: response.data});\n};"]},"metadata":{},"sourceType":"module"}