{"ast":null,"code":"import _ from 'lodash';\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  const userIds = _.uniq(_.map(getState().posts, 'userId'));\n\n  userIds.forEach(id => dispatch(fetchUser(id))); // _.chain(getState().posts)\n  // \t.map('usrId')\n  // \t.uniq()\n  // \t.forEach(id => dispatch(fetchUser(id)))\n  // \t.value()\n};\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get('/posts');\n  dispatch({\n    type: 'FETCH_POSTS',\n    payload: response.data\n  });\n}; // export const fetchUser = id =>  dispatch => _fetchUser(id, dispatch);\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n// \tconst response = await jsonPlaceholder.get(`/users/${id}`);\n// \tdispatch({ type: 'FETCH_USER', payload: response.data});\n// });\n\nexport const fetchUser = id => async dispatch => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n  dispatch({\n    type: 'FETCH_USER',\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/workspace/ModernReactWithRedux/Section14/blog/src/actions/index.js"],"names":["_","jsonPlaceholder","fetchPostsAndUsers","dispatch","getState","fetchPosts","userIds","uniq","map","posts","forEach","id","fetchUser","response","get","type","payload","data"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAErE,QAAMD,QAAQ,CAACE,UAAU,EAAX,CAAd;;AACA,QAAMC,OAAO,GAAGN,CAAC,CAACO,IAAF,CAAOP,CAAC,CAACQ,GAAF,CAAMJ,QAAQ,GAAGK,KAAjB,EAAwB,QAAxB,CAAP,CAAhB;;AACAH,EAAAA,OAAO,CAACI,OAAR,CAAgBC,EAAE,IAAIR,QAAQ,CAACS,SAAS,CAACD,EAAD,CAAV,CAA9B,EAJqE,CAMrE;AACA;AACA;AACA;AACA;AACA,CAXM;AAaN,OAAO,MAAMN,UAAU,GAAG,MAAM,MAAMF,QAAN,IAAkB;AACjD,QAAMU,QAAQ,GAAG,MAAMZ,eAAe,CAACa,GAAhB,CAAoB,QAApB,CAAvB;AAEAX,EAAAA,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACA,CAJM,C,CAMR;AACA;AACA;AAEA;AACA;;AAEA,OAAO,MAAML,SAAS,GAAGD,EAAE,IAAI,MAAMR,QAAN,IAAkB;AAChD,QAAMU,QAAQ,GAAG,MAAMZ,eAAe,CAACa,GAAhB,CAAqB,UAASH,EAAG,EAAjC,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACA,CAJM","sourcesContent":["import _ from 'lodash';\nimport jsonPlaceholder from '../apis/jsonPlaceholder'\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n\t\n\tawait dispatch(fetchPosts());\n\tconst userIds = _.uniq(_.map(getState().posts, 'userId'));\n\tuserIds.forEach(id => dispatch(fetchUser(id)));\n\t\n\t// _.chain(getState().posts)\n\t// \t.map('usrId')\n\t// \t.uniq()\n\t// \t.forEach(id => dispatch(fetchUser(id)))\n\t// \t.value()\n};\n\n\texport const fetchPosts = () => async dispatch => {\n\t\tconst response = await jsonPlaceholder.get('/posts');\n\t\n\t\tdispatch({ type: 'FETCH_POSTS', payload: response.data });\n\t};\n\n// export const fetchUser = id =>  dispatch => _fetchUser(id, dispatch);\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n// \tconst response = await jsonPlaceholder.get(`/users/${id}`);\n\t\n// \tdispatch({ type: 'FETCH_USER', payload: response.data});\n// });\n\nexport const fetchUser = id => async dispatch => {\n\tconst response = await jsonPlaceholder.get(`/users/${id}`);\n\t\n\tdispatch({ type: 'FETCH_USER', payload: response.data});\n};"]},"metadata":{},"sourceType":"module"}